@page "/card/create"
@using KZHub.WebClient.AsyncDataServices;
@using KZHub.WebClient.DTOs.Card;
@using KZHub.WebClient.Services;
@inject ICardGenerationServiceClient _cardGenerationServiceClient;
@inject NavigationManager _navigationManager;
@inject CardState _cardState;


<h3>Stwórz swoją Kartę Zbiórki!</h3>

<EditForm method="post" EditContext="@EditContext" OnValidSubmit="PostCard">
    <FluentValidationValidator/>
    <ValidationSummary/>
    <label class="fw-bold me-2">Zastęp: <input @bind-value="Card.Zastep" /></label>
    <label class="fw-bold me-2">Datum: <input @bind-value="Card.Date" type="date" /></label>
    <label class="fw-bold me-2">Miejsce: <input @bind-value="Card.Place" /></label><br />

    @foreach(var p in Card.Points)
    {
        <div class="d-block m-2">
            <label class="fw-bold me-2">Czas: <input @bind-value="p.Time" type="time" /></label>
            <label class="fw-bold me-2">Co robimy? <input @bind-value="p.Title" /></label>
            <ValidationMessage For="@(() => p.Title)"/>
            <label class="fw-bold me-2">Kto? <input @bind-value="p.ZastepMember" /></label>
            <ValidationMessage For="@(() => p.ZastepMember)" />
        </div>
    }
    <button class="m-1" @onclick="AddPoint" type="button">Dodaj punkt zbiórki!</button><br/>

    <label class="fw-bold m-1">Co trzeba zabrać?<input @bind-value="Card.RequiredItems" /></label><br />

    <input class="m-1" type="submit" value="Generuj kartę" />
    <button class="m-1" type="button" @onclick="SaveDraft">Zapisz Szkic</button>
</EditForm>

@code {
    public CreateCardDTO Card = new();
    EditContext? EditContext;

    protected override void OnInitialized()
    {
        EditContext = new(Card);
    }

    private async Task PostCard()
    {
        //Send data to CardGenerationService
        _cardState.Card = await _cardGenerationServiceClient.SendCardToGenerate(Card);

        _navigationManager.NavigateTo("/card/view");
    }

    private void AddPoint()
    {
        Card.Points.Add(new CreatePointDTO());
    }

    private void SaveDraft()
    {
        
    }
}
